import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Footer from "@/components/layout/footer";
import Navbar from "@/components/layout/navbar";
import { Suspense } from "react";
import SuspenseFallback from "@/components/suspenseFallback";
import { CartProvider } from "@/components/cart/cart-context";
import { getCart } from "@/lib/shopify";
import { cookies } from "next/headers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "NextJS E-Commerce App",
  description: "Generated by create next app",
};

// Mark route as dynamic
// This disables static optimization, ensuring cart/user data is always fresh.
export const dynamic = 'force-dynamic';

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Only read the cookie, do not set it!
  const cartId = (await cookies()).get("cartId")?.value;
  const initialCart = cartId ? await getCart(cartId) : undefined;
  const cartPromise = Promise.resolve(initialCart);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <CartProvider cartPromise={cartPromise}>
          <Suspense fallback={<SuspenseFallback />}>
            <Navbar />
          </Suspense>
          {children}
          <Footer />
        </CartProvider>
      </body>
    </html>
  );
}
